DROP TABLE CUSTOMER Cascade Constraints;
DROP TABLE ORDER_INFORMATION Cascade Constraints;
DROP TABLE RATE_OF_CURRENCY Cascade Constraints;
DROP TABLE TRADE_HISTORY Cascade Constraints;
DROP TABLE CRYTO Cascade Constraints;
DROP TABLE TRANSFER Cascade Constraints;
DROP TABLE WALLET Cascade Constraints;


CREATE TABLE CUSTOMER (
    CUSTOMER_ID INT PRIMARY KEY,
    FIRST_NAME VARCHAR2(50),
    LAST_NAME VARCHAR2(50),
    GENDER VARCHAR2(10),
    EMAIL VARCHAR2(100),
    COUNTRY VARCHAR2(50),
    CITY VARCHAR2(50),
    STREET VARCHAR2(50),
    ZIPCODE VARCHAR2(50),
    PHONE_NUMBER VARCHAR2(20),
    CUSTOMER_PASS VARCHAR2(32) NOT NULL,
	CUSTOMER_ROLE VARCHAR2(30) NOT NULL,
    user_activated number default 0
);


CREATE TABLE CRYTO (
    CRYPTO_ID VARCHAR2(50) PRIMARY KEY,
    CRYPTO_NAME VARCHAR2(50),
    QUANTITY int
);

CREATE TABLE ORDER_INFORMATION (
    ORDER_ID INT PRIMARY KEY,
    ORDER_STATUS INT CHECK (ORDER_STATUS = 0 OR ORDER_STATUS = 1), -- 0 means not confirmed 1 means confirmed
    ORDER_AMOUNT VARCHAR2(50),
    CUSTOMER_ID INT,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
    CRYPTO_ID VARCHAR2(50),
    FOREIGN KEY (CRYPTO_ID) REFERENCES CRYTO (CRYPTO_ID)
);

CREATE TABLE RATE_OF_CURRENCY (
    USD_VALUE INT PRIMARY KEY,
    BDT_VALUE INT,
    EURO_VALUE INT,
    ORDER_ID INT,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDER_INFORMATION (ORDER_ID)
);

-- WEAK ENTITY
CREATE TABLE TRADE_HISTORY (
    ORDER_ID INT,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDER_INFORMATION(ORDER_ID),
    DATEE DATE 
);

CREATE TABLE TRANSFER (
    TRANSACTION_ID INT PRIMARY KEY,
    ACCOUNT_NUMBER VARCHAR2(100),
    TRANSFER_FEE VARCHAR2(50),
    BANK_TRANSFER VARCHAR2(50),
    CRYPTO_TRANSFER VARCHAR2(50)
);

CREATE TABLE WALLET (
    TOTAL_BALANCE VARCHAR2(100),
    CRYPTO_NAME VARCHAR2(50),
    CRYPTO_AMOUNT INT,
    TRANSACTION_ID INT,
    FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSFER (TRANSACTION_ID),
    CUSTOMER_ID INT,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID)
);

-- DATA ENTRY
INSERT INTO CUSTOMER VALUES (1,'Olivia','Bennett','Female','olivia@gmail.com','Canada','Toronto','Queen Street',1800,4167624938,'olivia1','editor',1);
INSERT INTO CUSTOMER VALUES (2,'Ethan','Collins','Male','ethan@gmail.com','Germany','Berlin','Lindenstra Street',8801,3125892047,'ethan1','viewer',1);
INSERT INTO CUSTOMER VALUES (3,'Sophia','Parker','Female','sophia@gmail.com','Japan','Kyoto','Dori Street',9895,2139426721,'sophia1','trader',1);
INSERT INTO CUSTOMER VALUES (4,'Noah','Mitchell','Male','noah@gmail.com','Australia','Sydney','George Street',2524,7186531294,'noah1','trader',1);
INSERT INTO CUSTOMER VALUES (5,'Ava','Harrison','Female','ava@gmail.com','France','Paris','Rivoli Street',5601,3058364058,'ava1','admin',1);
INSERT INTO CUSTOMER VALUES (6,'Mashiur','Rahaman','Male','mnmashiur12@gmail.com','Bangladesh','Dhaka','DIT Project',1212,1306544278,'mashiur1','admin',1);
INSERT INTO CUSTOMER VALUES (7,'Adnan','Ali','Male','adnan@gmail.com','Bangladesh','Puran Dhaka','Aga Sadek Road',1210,1622233332,'adnan1','admin',1);
INSERT INTO CUSTOMER VALUES (8,'Arham','Akib','Male','akib@gmail.com','Bangladesh','Dhaka','Merul Badda',1212,1478523698,'arham1','admin',1);
INSERT INTO CUSTOMER VALUES (9,'Hasibul','Himel','Male','himel@gmail.com','Bangladesh','Dhaka Metro','Malibagh',1221,123456789,'hasibul1','admin',1);

SELECT * FROM CUSTOMER;

INSERT INTO CRYTO VALUES ('BTC','BITCOIN','3600');
INSERT INTO CRYTO VALUES ('LTC','LITECOIN','1200');
INSERT INTO CRYTO VALUES ('ETH','ETHEREUM','4800');
INSERT INTO CRYTO VALUES ('BNB','BINANCE COIN','200');
INSERT INTO CRYTO VALUES ('SOL','SOLANA','7800');
INSERT INTO CRYTO VALUES ('VET','VE CHAIN','120');

SELECT * FROM CRYTO;


INSERT INTO ORDER_INFORMATION VALUES (101,1,'10',3,'BTC');
INSERT INTO ORDER_INFORMATION VALUES (102,0,'19',4,'BNB');
INSERT INTO ORDER_INFORMATION VALUES (103,1,'5',3,'SOL');
INSERT INTO ORDER_INFORMATION VALUES (104,1,'9',1,'LTC');
INSERT INTO ORDER_INFORMATION VALUES (105,1,'80',5,'BTC');
INSERT INTO ORDER_INFORMATION VALUES (106,0,'2',4,'VET');
INSERT INTO ORDER_INFORMATION VALUES (107,1,'99',6,'BTC');
INSERT INTO ORDER_INFORMATION VALUES (108,1,'90',7,'BNB');
INSERT INTO ORDER_INFORMATION VALUES (109,1,'60',8,'LTC');
INSERT INTO ORDER_INFORMATION VALUES (110,1,'50',9,'VET');

SELECT * FROM ORDER_INFORMATION;


INSERT INTO RATE_OF_CURRENCY VALUES ('1220','149194.35','1171.53',101);
INSERT INTO RATE_OF_CURRENCY VALUES ('10240','9833.20','1252258.02',102);
INSERT INTO RATE_OF_CURRENCY VALUES ('651','625.14','79611.58',103);
INSERT INTO RATE_OF_CURRENCY VALUES ('9820','9429.89','1200896.49',104);
INSERT INTO RATE_OF_CURRENCY VALUES ('9760','9372.27','1193558.58',105);
INSERT INTO RATE_OF_CURRENCY VALUES ('36450','35001.97','4457500.88',106);
INSERT INTO RATE_OF_CURRENCY VALUES ('23654','85214.23','9874569.36',107);
INSERT INTO RATE_OF_CURRENCY VALUES ('96547','98754.63','9632587.21',108);
INSERT INTO RATE_OF_CURRENCY VALUES ('85215','36985.25','9874561.36',110);
INSERT INTO RATE_OF_CURRENCY VALUES ('23547','98745.36','98754.36',109);

SELECT * FROM RATE_OF_CURRENCY;


INSERT INTO TRADE_HISTORY VALUES (101,TO_DATE('25-01-2024','DD-MM-YYYY'));
INSERT INTO TRADE_HISTORY VALUES (102,TO_DATE('09-04-2024','DD-MM-YYYY'));
INSERT INTO TRADE_HISTORY VALUES (103,TO_DATE('18-05-2024','DD-MM-YYYY'));
INSERT INTO TRADE_HISTORY VALUES (104,TO_DATE('21-07-2024','DD-MM-YYYY'));
INSERT INTO TRADE_HISTORY VALUES (105,TO_DATE('08-08-2024','DD-MM-YYYY')); 
INSERT INTO TRADE_HISTORY VALUES (106,TO_DATE('23-08-2024','DD-MM-YYYY'));
INSERT INTO TRADE_HISTORY VALUES (107,TO_DATE('23-08-2024','DD-MM-YYYY'));
INSERT INTO TRADE_HISTORY VALUES (108,TO_DATE('23-08-2024','DD-MM-YYYY'));
INSERT INTO TRADE_HISTORY VALUES (109,TO_DATE('23-08-2024','DD-MM-YYYY'));
INSERT INTO TRADE_HISTORY VALUES (110,TO_DATE('23-08-2024','DD-MM-YYYY'));

SELECT * FROM TRADE_HISTORY;


INSERT INTO TRANSFER VALUES (445758,'100121314','2','YES',' ');
INSERT INTO TRANSFER VALUES (345757,'100151617','1',' ','YES');
INSERT INTO TRANSFER VALUES (245756,'1001819140','3',' ','YES');
INSERT INTO TRANSFER VALUES (145755,'100212344','2','YES',' ');
INSERT INTO TRANSFER VALUES (123456,'123456789','2','YES',' ');
INSERT INTO TRANSFER VALUES (987654,'987654321','3',' ','YES');
INSERT INTO TRANSFER VALUES (963852,'213465879','1','YES',' ');
INSERT INTO TRANSFER VALUES (741852,'963852741','4','','YES');

SELECT * FROM TRANSFER;


INSERT INTO WALLET VALUES ('6000$','BITCOIN','36',245756,1);
INSERT INTO WALLET VALUES ('1200$','VE CHAIN','9',445758,2);
INSERT INTO WALLET VALUES ('2599$','ETHEREUM','20',145755,3);
INSERT INTO WALLET VALUES ('680$','LITECOIN','74',345757,4);
INSERT INTO WALLET VALUES ('680$','LITECOIN','74',123456,6);
INSERT INTO WALLET VALUES ('680$','LITECOIN','74',987654,9);
INSERT INTO WALLET VALUES ('680$','LITECOIN','74',963852,7);
INSERT INTO WALLET VALUES ('680$','LITECOIN','74',741852,8);

SELECT * FROM WALLET;


-- View For Showing Customer's Order Details with Cryptocurrency Information 
CREATE OR REPLACE VIEW CUSTOMER_ORDER_CRYPTO_DETAILS AS
SELECT 
    C.CUSTOMER_ID,C.FIRST_NAME || ' ' || C.LAST_NAME AS CUSTOMER_NAME,
    O.ORDER_ID,
    O.ORDER_STATUS,O.ORDER_AMOUNT,CR.CRYPTO_NAME
FROM CUSTOMER C
JOIN ORDER_INFORMATION O ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN CRYTO CR ON O.CRYPTO_ID = CR.CRYPTO_ID;

SELECT * FROM CUSTOMER_ORDER_CRYPTO_DETAILS;


-- View For Showing Trade History with Cryptocurrency and Order Details
CREATE OR REPLACE VIEW TRADE_HISTORY_DETAILS AS
SELECT 
    O.ORDER_ID,
    CR.CRYPTO_NAME,
    TH.DATEE AS TRADE_DATE,
    O.ORDER_AMOUNT
FROM TRADE_HISTORY TH
JOIN ORDER_INFORMATION O ON TH.ORDER_ID = O.ORDER_ID
JOIN CRYTO CR ON O.CRYPTO_ID = CR.CRYPTO_ID;

SELECT * FROM TRADE_HISTORY_DETAILS;


-- View For Showing Wallet and Transfer Summary 
CREATE OR REPLACE VIEW WALLET_TRANSFER_SUMMARY AS
    SELECT W.CRYPTO_NAME,W.CRYPTO_AMOUNT,W.TOTAL_BALANCE,T.TRANSACTION_ID,
    T.ACCOUNT_NUMBER,T.TRANSFER_FEE,T.BANK_TRANSFER,T.CRYPTO_TRANSFER
FROM WALLET W JOIN TRANSFER T ON W.TRANSACTION_ID = T.TRANSACTION_ID;

SELECT * FROM WALLET_TRANSFER_SUMMARY;


-- View For Showing Full Customer Activity Overview
CREATE OR REPLACE VIEW CUSTOMER_ACTIVITY_OVERVIEW AS
SELECT 
    C.CUSTOMER_ID,C.FIRST_NAME || ' ' || C.LAST_NAME AS CUSTOMER_NAME,O.ORDER_ID,
    CASE 
        WHEN O.ORDER_STATUS = 1 THEN 'Confirmed'
        ELSE 'Not Confirmed'
    END AS ORDER_STATUS,
    TH.DATEE AS TRADE_DATE,W.CRYPTO_NAME AS WALLET_CRYPTO,W.CRYPTO_AMOUNT AS WALLET_AMOUNT
FROM CUSTOMER C
LEFT JOIN ORDER_INFORMATION O ON C.CUSTOMER_ID = O.CUSTOMER_ID
LEFT JOIN TRADE_HISTORY TH ON O.ORDER_ID = TH.ORDER_ID
LEFT JOIN WALLET W ON O.CRYPTO_ID = (SELECT CR.CRYPTO_ID FROM CRYTO CR WHERE CR.CRYPTO_NAME = W.CRYPTO_NAME)
ORDER BY C.CUSTOMER_ID, O.ORDER_ID;

SELECT * FROM CUSTOMER_ACTIVITY_OVERVIEW;


-- View For Showing Cryptocurrency Trend (Upward, Downward, Stable)
CREATE OR REPLACE VIEW CRYPTOCURRENCY_TRENDS AS
SELECT 
    CR.CRYPTO_NAME,
    CR.QUANTITY AS AVAILABILITY,
    COUNT(O.ORDER_ID) AS TOTAL_ORDERS,
    CASE 
        WHEN CR.QUANTITY > 5000 AND COUNT(O.ORDER_ID) > 3 THEN 'Upward'
        WHEN CR.QUANTITY BETWEEN 1000 AND 5000 THEN 'Stable'
        ELSE 'Downward'
    END AS TREND
FROM CRYTO CR
LEFT JOIN ORDER_INFORMATION O ON CR.CRYPTO_ID = O.CRYPTO_ID
GROUP BY CR.CRYPTO_NAME, CR.QUANTITY;

SELECT * FROM CRYPTOCURRENCY_TRENDS;


-- View For Suggesting Cryptocurrency for Investment
CREATE OR REPLACE VIEW CRYPTO_INVESTMENT_SUGGESTION AS
SELECT 
    CR.CRYPTO_NAME,
    CR.QUANTITY AS AVAILABILITY,
    COUNT(O.ORDER_ID) AS TOTAL_ORDERS,
    CASE 
        WHEN COUNT(O.ORDER_ID) > 5 THEN 'Highly Recommended'
        WHEN COUNT(O.ORDER_ID) BETWEEN 2 AND 5 THEN 'Moderately Recommended'
        ELSE 'Not Recommended'
    END AS INVESTMENT_RECOMMENDATION
FROM CRYTO CR
LEFT JOIN ORDER_INFORMATION O ON CR.CRYPTO_ID = O.CRYPTO_ID
GROUP BY CR.CRYPTO_NAME, CR.QUANTITY;

SELECT * FROM CRYPTO_INVESTMENT_SUGGESTION;


--View for Converting Cryptocurrency Into USD_Value,BDT_Value,EURO_Value
CREATE OR REPLACE VIEW CRYPTO_CONVERSION_VIEW AS
SELECT 
    CR.CRYPTO_ID,
    CR.CRYPTO_NAME,
    RC.USD_VALUE,
    RC.BDT_VALUE,
    RC.EURO_VALUE
FROM CRYTO CR
JOIN RATE_OF_CURRENCY RC ON CR.CRYPTO_ID = (SELECT O.CRYPTO_ID FROM ORDER_INFORMATION O WHERE O.ORDER_ID = RC.ORDER_ID);

SELECT * FROM CRYPTO_CONVERSION_VIEW;


CREATE OR REPLACE VIEW CUSTOMER_ORDER_QUANTITY AS
SELECT 
    C.FIRST_NAME || ' ' || C.LAST_NAME AS CUSTOMER_NAME,
    COUNT(O.ORDER_ID) AS ORDER_QUANTITY
FROM CUSTOMER C
LEFT JOIN ORDER_INFORMATION O ON C.CUSTOMER_ID = O.CUSTOMER_ID
GROUP BY C.FIRST_NAME, C.LAST_NAME;

SELECT * FROM CUSTOMER_ORDER_QUANTITY;


--View for Showing Total Balances of user
CREATE OR REPLACE VIEW USER_TOTAL_BALANCES AS
SELECT 
    C.CUSTOMER_ID,
    C.FIRST_NAME || ' ' || C.LAST_NAME AS CUSTOMER_NAME,
    NVL(W.CRYPTO_NAME, 'N/A') AS CRYPTO_NAME,
    NVL(W.CRYPTO_AMOUNT, 0) AS TOTAL_CRYPTO_AMOUNT,
    NVL(TO_NUMBER(REPLACE(W.TOTAL_BALANCE, '$', '')), 0) AS TOTAL_BALANCE_IN_USD,
    NVL(TO_NUMBER(REPLACE(W.TOTAL_BALANCE, '$', '')) * 100, 0) AS TOTAL_BALANCE_IN_BDT, -- Example conversion (1 USD = 100 BDT)
    NVL(TO_NUMBER(REPLACE(W.TOTAL_BALANCE, '$', '')) * 0.9, 0) AS TOTAL_BALANCE_IN_EURO -- Example conversion (1 USD = 0.9 EURO)
FROM 
    CUSTOMER C
LEFT JOIN 
    WALLET W ON C.CUSTOMER_ID = W.CUSTOMER_ID;

SELECT * FROM USER_TOTAL_BALANCES;


--view for trade summary by date
CREATE OR REPLACE VIEW TRADE_SUMMARY_BY_DATE AS
SELECT 
    TH.DATEE AS TRADE_DATE,
    COUNT(TH.ORDER_ID) AS TOTAL_TRADES,
    SUM(O.ORDER_AMOUNT) AS TOTAL_TRADE_AMOUNT
FROM TRADE_HISTORY TH
JOIN ORDER_INFORMATION O ON TH.ORDER_ID = O.ORDER_ID
WHERE O.ORDER_STATUS = 1
GROUP BY TH.DATEE
ORDER BY TH.DATEE;

SELECT * FROM TRADE_SUMMARY_BY_DATE;

--view for showing top customers
CREATE OR REPLACE VIEW TOP_CUSTOMERS_BY_CRYPTO AS
SELECT 
    CR.CRYPTO_NAME,
    C.FIRST_NAME || ' ' || C.LAST_NAME AS CUSTOMER_NAME,
    SUM(O.ORDER_AMOUNT) AS TOTAL_SPENT
FROM CRYTO CR
JOIN ORDER_INFORMATION O ON CR.CRYPTO_ID = O.CRYPTO_ID
JOIN CUSTOMER C ON O.CUSTOMER_ID = C.CUSTOMER_ID
WHERE O.ORDER_STATUS = 1
GROUP BY CR.CRYPTO_NAME, C.FIRST_NAME, C.LAST_NAME
ORDER BY CR.CRYPTO_NAME, TOTAL_SPENT DESC;

SELECT * FROM TOP_CUSTOMERS_BY_CRYPTO;


--view for showing cryptocurrency revenue
CREATE OR REPLACE VIEW CRYPTOCURRENCY_REVENUE_GENERATED AS
SELECT 
    CR.CRYPTO_NAME,
    SUM(TO_NUMBER(REPLACE(O.ORDER_AMOUNT, '$', ''))) AS TOTAL_REVENUE,
    COUNT(O.ORDER_ID) AS TOTAL_ORDERS,
    ROUND(SUM(TO_NUMBER(REPLACE(O.ORDER_AMOUNT, '$', ''))) / COUNT(O.ORDER_ID), 2) AS AVERAGE_ORDER_VALUE
FROM CRYTO CR
JOIN ORDER_INFORMATION O ON CR.CRYPTO_ID = O.CRYPTO_ID
WHERE O.ORDER_STATUS = 1
GROUP BY CR.CRYPTO_NAME
ORDER BY TOTAL_REVENUE DESC;

SELECT * FROM CRYPTOCURRENCY_REVENUE_GENERATED;


--view for showing flactuations by months
CREATE OR REPLACE VIEW CRYPTO_TRADE_VOLUME_TRENDS AS
SELECT 
    CR.CRYPTO_NAME,
    TO_CHAR(MAX(TH.DATEE), 'YYYY-MM') AS TRADE_MONTH,  -- Most recent trade month
    SUM(O.ORDER_AMOUNT) AS MONTHLY_VOLUME,
    COUNT(O.ORDER_ID) AS TOTAL_TRADES,
    ROUND(AVG(O.ORDER_AMOUNT), 2) AS AVERAGE_TRADE_SIZE
FROM CRYTO CR
JOIN ORDER_INFORMATION O ON CR.CRYPTO_ID = O.CRYPTO_ID
JOIN TRADE_HISTORY TH ON O.ORDER_ID = TH.ORDER_ID
WHERE O.ORDER_STATUS = 1
GROUP BY CR.CRYPTO_NAME
ORDER BY CR.CRYPTO_NAME;




SELECT * FROM CRYPTO_TRADE_VOLUME_TRENDS;